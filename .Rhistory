mat$durations2[1][1]
mat$durations2[1][2]
mat$durations2[1][3]
mat$durations2[[3]]
mat$durations2[[1]][[3]]
head(mat$durations2[[1]][[3]])
mat
mat[1]
mat[[1]]
mat[[2]]
mat$durations2
mat$durations2[1]
mat$durations2[[1]]
mat$durations2
mat$durations2[[1]]
mat$durations2[[1]][1]
mat$durations2
mat$durations2[[2]]
mat$durations2[[1]]
mat$onsets
mat$modulators2
session_info()$platform[1]
??sessionInfo
library(sessioninfo)
session_info()$platform[1]
#knitr::opts_chunk$set(echo = TRUE)
if(!require(pacman)) {
install.packages("pacman")
library(pacman)
}
pacman::p_load(reticulate, R.matlab, sessioninfo) #reticulate for python and R.matlab for... Matlab
use_virtualenv(virtualenv = "r-reticulate")
homepath = getwd()
homepath
library(readr)
data <- read_csv("~/Desktop/SwitchDrive/responses/data/data.csv")
View(data)
data <- read_csv("data/data.csv")
data <- read_csv("data/data.csv")
View(data)
data <- read_csv(paste(homepath, "data/data.csv"), sep="")
data <- read_csv(paste(homepath, "data/data.csv", sep=""))
data <- read_csv(paste(homepath, "data/data.csv", sep="/"))
if(!require(pacman)) {
install.packages("pacman")
library(pacman)
}
pacman::p_load(tidyverse) #
data %>% gather(variable, value, (var1_ses1:var3_ses1))
df = data %>% gather(variable, value, (var1_ses1:var3_ses1))
View(data)
View(df)
df = data %>% gather(variable, value, (var1_ses1:var3_ses1))ar, variable,Group.3)
df = data %>% gather(variable, value, (var1_ses1:var3_ses1))
ifelse(grepl(df$variable, 'ses_1'), 0, 1)
grepl(df$variable, 'ses_1')
ifelse(grepl( 'ses_1', df$variable), 0, 1)
grepl( 'ses_1', df$variable)
df$variable
df$variable[1]
df$variable[1][:end]
df$variable[1][3:end]
df$variable[1]
data %>% pivot_longer(
cols = new_sp_m014:newrel_f65,
names_to = c("session"),
names_pattern = "var_?(.*)",
values_to = "count"
)
data %>% pivot_longer(
cols = var1_ses1:var3_ses1,
names_to = c("session"),
names_pattern = "var_?(.*)",
values_to = "count"
)
test =data %>% pivot_longer(
cols = var1_ses1:var3_ses1,
names_to = c("session"),
names_pattern = "var_?(.*)",
values_to = "count"
)
View(test)
test = data %>% pivot_longer(
cols = var1_ses1:var3_ses1,
names_to = c("var", "session"),
names_pattern = "var(.*)_(.*)",
values_to = "count"
)
df = data %>% pivot_longer(
cols = var1_ses1:var13_ses2,
names_to = c("var", "session"),
names_pattern = "var(.*)_(.*)",
values_to = "measure"
)
df = df %>% pivot_wider(names_from = var, values_from = measure)
View(df)
df_plot = data %>% pivot_longer(
cols = var1_ses1:var13_ses2,
names_to = c("var", "session"),
names_pattern = "var(.*)_(.*)",
values_to = "measure"
)
df = df_plot %>% pivot_wider(names_from = var, values_from = measure)
if(!require(pacman)) {
install.packages("pacman")
library(pacman)
}
pacman::p_load(tidyverse, ggthemes) #
ggplot(df_plot)+
geom_boxplot(aes(group, measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") +
xlab('')
ggplot(df_plot)+
geom_boxplot(aes(intervention, measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") +
xlab('')
View(df_plot)
data$intervention = as.factor(data$intervention)
df_plot = data %>% pivot_longer(
cols = var1_ses1:var13_ses2,
names_to = c("var", "session"),
names_pattern = "var(.*)_(.*)",
values_to = "measure"
)
df = df_plot %>% pivot_wider(names_from = var, values_from = measure)
ggplot(df_plot)+
geom_boxplot(aes(intervention, measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") +
xlab('')
ggplot(df_plot)+
geom_boxplot(aes( measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") +
xlab('')
ggplot(df_plot)+
geom_boxplot(aes( y=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") +
xlab('')
ggplot(df_plot)+
geom_density(aes( y=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") +
xlab('')
ggplot(df_plot)+
geom_density(aes( x=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
df_plot$session = as.factor(df_plot$session)
df = df_plot %>% pivot_wider(names_from = var, values_from = measure)
nums <- unlist(lapply(df, is.numeric)) #find numeric variables
pairs(~., data = df[ , nums], main = "Scatterplot Matrix of variables")
corrplot(cor(df[ , nums], use="pairwise.complete.obs"), type="lower")
?/corrplot
??corrplot
pacman::p_load(tidyverse, ggthemes, corrplot)
corrplot(cor(df[ , nums], use="pairwise.complete.obs"), type="lower")
num <- unlist(lapply(df_plot, is.numeric))
df_plot[ , nums] <- lapply(df_plot[ , num], scale)
df_plot[ , num]
df[ , nums] <- lapply(df[ , nums], scale)
df_plot_scaled = df %>% pivot_wider(names_from = var, values_from = measure)
ggplot(df_plot_scaled)+
geom_boxplot(aes( y=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
df
View(df)
df[ , nums$
df[ , nums]
names(df[ , nums])
data$intervention = as.factor(data$intervention)
data$id = as.factor(data$id)
df_plot = data %>% pivot_longer(
cols = var1_ses1:var13_ses2,
names_to = c("var", "session"),
names_pattern = "var(.*)_(.*)",
values_to = "measure"
)
df_plot$session = as.factor(df_plot$session)
df = df_plot %>% pivot_wider(names_from = var, values_from = measure)
ggplot(df_plot)+
geom_density(aes( x=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
nums <- unlist(lapply(df, is.numeric))
corrplot::corrplot(cor(df[ , nums], use="pairwise.complete.obs"), type="lower")
df[ , nums] <- lapply(df[ , nums], scale)
df_plot_scaled <- gather(df, "feature", "n", names(df[ , nums]))
View(df_plot)
View(df_plot_scaled)
names(df[ , nums])
gather(df, "feature", "n", all_of(names(df[ , nums])))
a = gather(df, "feature", "n", all_of(names(df[ , nums])))
View(a)
data[ , nums] <- lapply(data[ , nums], scale)
View(data)
nums
df[ , nums] <- lapply(df[ , nums], scale)
View(df)
data$intervention = as.factor(data$intervention)
data$id = as.factor(data$id)
nums <- unlist(lapply(data, is.numeric)) #find numeric variables
df_plot = data %>% pivot_longer(
cols = names(data[ , nums]),
names_to = c("var", "session"),
names_pattern = "var(.*)_(.*)",
values_to = "measure"
)
df_plot$session = as.factor(df_plot$session)
df = df_plot %>% pivot_wider(names_from = var, values_from = measure)
ggplot(df_plot)+
geom_density(aes( x=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
nums <- unlist(lapply(df, is.numeric)) #find numeric variables
#pairs(~., data = df[ , nums], main = "Scatterplot Matrix of variables") #default solution
corrplot::corrplot(cor(df[ , nums], use="pairwise.complete.obs"), type="lower") #using corrplot
#scaling indivudal variables
df[ , nums] <- lapply(df[ , nums], scale)
View(df)
View(df)
df_plot_scaled = df %>% pivot_longer(
cols = names(df[ , nums]),
values_to = "measure"
)
View(df_plot_scaled)
df_plot_scaled = df %>% pivot_longer(
cols = names(df[ , nums]),
names_to = "var",
values_to = "measure"
)
ggplot(df_plot_scaled)+
geom_boxplot(aes( y=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
df_plot_scaled$var
df_plot_scaled$var = as.factor(df_plot_scaled$var)
ggplot(df_plot_scaled)+
geom_boxplot(aes( y=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
df_plot_scaled$var = as.numeric(df_plot_scaled$var)
ggplot(df_plot_scaled)+
geom_boxplot(aes( y=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
df_plot_scaled$var = as.factor(df_plot_scaled$var)
ordered(df_plot_scaled$var)
ggplot(df_plot_scaled)+
geom_boxplot(aes( y=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
data$intervention = as.factor(data$intervention)
data$id = as.factor(data$id)
nums <- unlist(lapply(data, is.numeric)) #find numeric variables
df_plot = data %>% pivot_longer(
cols = names(data[ , nums]),
names_to = c("var", "session"),
names_pattern = "var(.*)_(.*)",
values_to = "measure"
)
df_plot$session = as.factor(df_plot$session)
df_plot_scaled$var = ordered(df_plot_scaled$var) #order for neat plots
df = df_plot %>% pivot_wider(names_from = var, values_from = measure)
ggplot(df_plot)+
geom_density(aes( x=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
nums <- unlist(lapply(df, is.numeric)) #find numeric variables
#pairs(~., data = df[ , nums], main = "Scatterplot Matrix of variables") #default solution
corrplot::corrplot(cor(df[ , nums], use="pairwise.complete.obs"), type="lower") #using corrplot
#scaling indivudal variables
df[ , nums] <- lapply(df[ , nums], scale)
df_plot_scaled = df %>% pivot_longer(
cols = names(df[ , nums]),
names_to = "var",
values_to = "measure"
) # re pivot
#now can actually compare outliers on standardized scale
ggplot(df_plot_scaled)+
geom_boxplot(aes( y=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
data$intervention = as.factor(data$intervention)
data$id = as.factor(data$id)
nums <- unlist(lapply(data, is.numeric)) #find numeric variables
df_plot = data %>% pivot_longer(
cols = names(data[ , nums]),
names_to = c("var", "session"),
names_pattern = "var(.*)_(.*)",
values_to = "measure"
)
df_plot$session = as.factor(df_plot$session)
df_plot_scaled$var = ordered(df_plot_scaled$var) #order for neat plots
df = df_plot %>% pivot_wider(names_from = var, values_from = measure)
ggplot(df_plot)+
geom_density(aes( x=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
df_plot$var
data$intervention = as.factor(data$intervention)
data$id = as.factor(data$id)
nums <- unlist(lapply(data, is.numeric)) #find numeric variables
df_plot = data %>% pivot_longer(
cols = names(data[ , nums]),
names_to = c("var", "session"),
names_pattern = "var(.*)_(.*)",
values_to = "measure"
)
df_plot$session = as.factor(df_plot$session)
df_plot$var = ordered(df_plot$var) #order for neat plots
df = df_plot %>% pivot_wider(names_from = var, values_from = measure)
ggplot(df_plot)+
geom_density(aes( x=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
nums <- unlist(lapply(df, is.numeric)) #find numeric variables
#pairs(~., data = df[ , nums], main = "Scatterplot Matrix of variables") #default solution
corrplot::corrplot(cor(df[ , nums], use="pairwise.complete.obs"), type="lower") #using corrplot
#scaling indivudal variables
df[ , nums] <- lapply(df[ , nums], scale)
df_plot_scaled = df %>% pivot_longer(
cols = names(df[ , nums]),
names_to = "var",
values_to = "measure"
) # re pivot
#now can actually compare outliers on standardized scale
ggplot(df_plot_scaled)+
geom_boxplot(aes( y=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
df_plot_scaled$var
df_plot$var
data$intervention = as.factor(data$intervention)
data$id = as.factor(data$id)
nums <- unlist(lapply(data, is.numeric)) #find numeric variables
df_plot = data %>% pivot_longer(
cols = names(data[ , nums]),
names_to = c("var", "session"),
names_pattern = "var(.*)_(.*)",
values_to = "measure"
)
ordered(as.numeric(df_plot$var))
data$intervention = as.factor(data$intervention)
data$id = as.factor(data$id)
nums <- unlist(lapply(data, is.numeric)) #find numeric variables
df_plot = data %>% pivot_longer(
cols = names(data[ , nums]),
names_to = c("var", "session"),
names_pattern = "var(.*)_(.*)",
values_to = "measure"
)
df_plot$session = as.factor(df_plot$session)
df_plot$var = ordered(as.numeric(df_plot$var)) #order for neat plots
df = df_plot %>% pivot_wider(names_from = var, values_from = measure)
ggplot(df_plot)+
geom_density(aes( x=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
nums <- unlist(lapply(df, is.numeric)) #find numeric variables
#pairs(~., data = df[ , nums], main = "Scatterplot Matrix of variables") #default solution
corrplot::corrplot(cor(df[ , nums], use="pairwise.complete.obs"), type="lower") #using corrplot
#scaling indivudal variables
df[ , nums] <- lapply(df[ , nums], scale)
df_plot_scaled = df %>% pivot_longer(
cols = names(df[ , nums]),
names_to = "var",
values_to = "measure"
) # re pivot
#now can actually compare outliers on standardized scale
ggplot(df_plot_scaled)+
geom_boxplot(aes( y=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
ggplot(df_plot)+
geom_density(aes( x=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
nums <- unlist(lapply(df, is.numeric)) #find numeric variables
#pairs(~., data = df[ , nums], main = "Scatterplot Matrix of variables") #default solution
corrplot::corrplot(cor(df[ , nums], use="pairwise.complete.obs"), type="lower") #using corrplot
#scaling indivudal variables
df[ , nums] <- lapply(df[ , nums], scale)
df_plot_scaled = df %>% pivot_longer(
cols = names(df[ , nums]),
names_to = "var",
values_to = "measure"
) # re pivot
df_plot_scaled$var = ordered(as.numeric(df_plot_scaled$var)) #order for neat plots
#now can actually compare outliers on standardized scale
ggplot(df_plot_scaled)+
geom_boxplot(aes( y=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
ggplot(df_plot)+
geom_density(aes( x=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
ggplot(df_plot)+
geom_density(aes( x=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "Density per variable")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("Density") + xlab('')
#now can actually compare outliers on standardized scale
ggplot(df_plot_scaled)+
geom_boxplot(aes( y=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("") + xlab('')
ggplot(df_plot_scaled)+
geom_boxplot(aes(x=intervention, y=measure))+
facet_wrap(~var, scales = "free")+
labs(title = "Boxplot by group")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("standadized value") + xlab('')
ggplot(df_plot_scaled)+
geom_boxplot(aes(x=intervention, y=measure))+
scale_x_discrete(labels=c("Placebo", "Control"))
facet_wrap(~var, scales = "free")+
labs(title = "Boxplot by group")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("standadized predictors") + xlab('')
ggplot(df_plot_scaled)+
geom_boxplot(aes(x=intervention, y=measure))+
scale_x_discrete(labels=c("Placebo", "Control")) +
facet_wrap(~var, scales = "free")+
labs(title = "Boxplot by group")+
ggthemes::theme_fivethirtyeight()+
theme(axis.title = element_text()) +
ylab("standadized predictors") + xlab('')
